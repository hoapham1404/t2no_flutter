name: Flutter CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write

jobs:
  testing:
    name: Test and Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze

      - name: Run tests
        run: flutter test

  build:
    name: Build ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    needs: testing
    strategy:
      matrix:
        platform: [android, linux, windows]
        include:
          - platform: android
            os: ubuntu-latest
            build-command: flutter build apk
            artifact-path: build/app/outputs/flutter-apk/app-release.apk
            artifact-name: android-apk

          - platform: linux
            os: ubuntu-latest
            build-command: flutter build linux
            artifact-path: build/linux/x64/release/linux-build.zip
            artifact-name: linux-build

          - platform: windows
            os: windows-latest
            build-command: flutter build windows
            artifact-path: build/windows/x64/runner/Release/windows-build.zip
            artifact-name: windows-build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Install Linux build dependencies
        if: matrix.platform == 'linux'
        run: sudo apt-get update && sudo apt-get install -y libglu1-mesa build-essential clang cmake ninja-build pkg-config libgtk-3-dev

      - name: Build ${{ matrix.platform }}
        run: ${{ matrix.build-command }}

      - name: Zip Linux build
        if: matrix.platform == 'linux'
        run: |
          cd build/linux/x64/release
          zip -r linux-build.zip bundle

      - name: Zip Windows build
        if: matrix.platform == 'windows'
        run: |
          cd build/windows/x64/runner/Release
          Compress-Archive -Path * -DestinationPath windows-build.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.artifact-path }}

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: testing
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Build iOS (no codesign)
        run: flutter build ios --no-codesign

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build, build-ios]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Android APK
        uses: actions/download-artifact@v4
        with:
          name: android-apk
          path: release-assets/android

      - name: Download Linux Build
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: release-assets/linux

      - name: Download Windows Build
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: release-assets/windows

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.sha }}
          tag_name: v${{ github.run_number }}
          files: |
            release-assets/android/app-release.apk
            release-assets/linux/linux-build.zip
            release-assets/windows/windows-build.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
